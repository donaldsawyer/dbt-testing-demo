version: 2

models:
  - name: slv_airport
    config:
      contract:
        enforced: true
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
            compare_model: source('demo_source', 'airport_code')
            compare_row_condition: "code != 'ZZZ'"
    columns:
      - name: code
        data_type: character varying(8)
        tests:
          - not_null
          - unique
          - dbt_expectations.expect_column_values_to_not_be_in_set:
              value_set: ['ZZZ', 'zzz']
              quote_values: true # (Optional. Default is 'true'.)
          - dbt_expectations.expect_column_value_lengths_to_be_between:
                min_value: 1
                strictly: false
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: character varying
      - name: name
        data_type: character varying(128)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "[[:alnum:]]+"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [character varying, text]
      - name: city  # Need a unit test for "description does not have a comma"
        data_type: character varying(32)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "[[:alnum:]]+"
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [character varying, text]
      - name: state_country
        data_type: character varying(8)
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [character varying, text]
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: "[[:alnum:]]+"
  - name: slv_carrier
    config:
      contract:
        enforced: true
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
            compare_model: source('demo_source', 'carrier_code')
            compare_row_condition: "TRIM(code) != ''"
    columns:
      - name: code
        data_type: character varying(8)
        tests:
          - not_null
      - name: name
        data_type: character varying (128)
        tests:
          - not_null
